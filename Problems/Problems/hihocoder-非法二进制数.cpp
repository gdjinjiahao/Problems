/*
描述
如果一个二进制数包含连续的两个1，我们就称这个二进制数是非法的。

小Hi想知道在所有 n 位二进制数（一共有2n个）中，非法二进制数有多少个。

例如对于 n = 3,有 011, 110, 111 三个非法二进制数。

由于结果可能很大，你只需要输出模10e9+7的余数。

输入
一个整数 n (1 ≤ n ≤ 100)。

输出
n 位非法二进制数的数目模10e9+7的余数。

样例输入
3
样例输出
3

分析：递推求解
f0[i]――以0结尾长度为i的合法串的数量
f1[i]――以1结尾长度为i的合法串的数量
f[i]――长度为i的非法二进制串数量

f0[1]=1,f1[1]=1

f0[i]=f0[i-1]+f1[i-1] ――长度为i-1的串，无论以0还是1结尾，最后一位加一个0即可构造长度为i的合法串
f1[i]=f0[i-1] ――若在长度为i-1的合法串后加1构造长度为i的合法串，则长度为i-1的串只能以0结尾

f[1]=0,f[2]=1
f[i]=f[i-1]*2+f1[i-1] ――长度为i的非法串构造方法：1.长度为i-1的非法串在最后一位加上0或1仍是非法串2.长度为i-1的以1结尾合法串在最后一位加1变为非法串

*/


#include <cstdio>
#include <cstring>
#include <string>
#include <algorithm>
#include <vector>
#include <iostream>
#include <map>
#include <cmath>
using namespace std;

long long f[]={0,0,1,3,8,19,43,94,201,423,880,1815,3719,7582,15397,31171,62952,126891,255379,513342,1030865,2068495,4147936,8313583,16655823,33358014,66791053,133703499,267603416,535524643,71563508,143959056,289264381,580707071,164938713,335580313,680388091,375706527,775570871,590229904,243705787,589745729,345071592,958057480,349609383,400627492,936158147,708628176,388471397,584469735,947681463,481631853,328274633,607829134,531949063,331468789,246799043,345030221,125354042,537433826,796886994,602519065,935802556,611114615,692503166,594789778,869636945,629114725,828127681,115994428,261626167,12628718,544271138,96932355,721268498,978330863,19859367,638710263,939609703,140400098,204170079,592890747,293701959,879874979,160141477,13145541,119545202,25207111,929785056,525057639,594973639,400293173,555790609,77131376,875017187,436338960,279736941,652837503,806097648,205981552,506172016};
int main()
{
	//freopen("in.txt","r",stdin);
	int n;
	scanf("%d",&n);
	printf("%lld\n",f[n]);
    return 0;
}